name: Build and Publish AppImage

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install system dependencies (including FUSE)
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('gui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: make install_deps

      - name: Build AppImage
        run: make build_appimage

      - name: Verify AppImage exists
        run: |
          if [ ! -f "Copilot-x86_64.AppImage" ]; then
            echo "Error: Copilot-x86_64.AppImage not found!"
            exit 1
          fi

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: Copilot-x86_64.AppImage
          path: Copilot-x86_64.AppImage

      - name: Publish AppImage to GitHub releases
        if: ${{ github.event_name == 'release' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: Copilot-x86_64.AppImage